# Default values for wildduck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

mailDomain: mail.wildduck.lan
webMailDomain: wildduck.lan

acmeEmail: user@domain.lan
cnameMapping: |-
  "mail"= ["mail.wildduck.lan"]

dkim:
  enabled: false
  secret: a secret cat
  cipher: aes192

tls:
  enabled: false
  domain: example.com

redis:
  host: redis
  port: 6379
  username:
  password:

serviceAccount:
  wildduck:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""
  webmail:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

wildduck:
  name: "wildduck"
  replicaCount: 1

  image:
    repository: nodemailer/wildduck
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.43.3"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  auth:
    enabled: true
    accessToken: "wildduck1234"

  service:
    httpType: ClusterIP
    httpPort: 80
    imapType: LoadBalancer
    imapPort: 143
    imapsPort: 993
    pop3Type: LoadBalancer
    pop3Port: 110
    pop3sPort: 995

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: wildduck.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  mongo:
    host: mongo
    port: 27017
    authEnabled: false
    username:
    password:
    usernameZoneMta:
    passwordZoneMta:

haproxy:
  name: "haproxy"
  replicaCount: 1

  tlsDomain: example.com

  image:
    repository: haproxy
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: lts-alpine

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    smtpsType: LoadBalancer
    smtpsPort: 587
    imapsType: LoadBalancer
    imapsPort: 993
    pop3sType: LoadBalancer
    pop3sPort: 995

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

webmail:
  name: "webmail"
  replicaCount: 1

  image:
    repository: nodemailer/wildduck-webmail
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    className: ""
    annotations:
      {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: webmail.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  mongo:
    host: mongo
    port: 27017
    authEnabled: false
    username:
    password:

haraka:
  name: "haraka"
  replicaCount: 1

  hostname: haraka.local
  hosts:
    - haraka.local

  dhparams: |-
    -----BEGIN DH PARAMETERS-----
    MIIBCAKCAQEA49KafGMs8UVwxLKeNGPPpt2yHq7xJ+RY+Uwi+yBWv9ScjfA0aGb1
    QvbQj2PIo4BLB7kkICbWeWaqSzfelpP1ldlS2OjYVu/O95u3UFdiPFVSKesNCoiS
    gPRq47vkV1of6yaDG+86V9888HV+5Ii06Fh3drRJ+VI6QqNTwm1axnjvMD7s80RS
    jRHPVoI2XPd4NpAn3y5ioZTqaWzhHkdS1Js4/QDv4P84kQAx/7ZWMMVQYscqv9sC
    A/n4UL3YLK7mbnyf8L9UF8rOfrp4AIIovx80jyvPSKWfsZ36P3328yNSys9IYZfn
    CirTTntjPjs4cCIAG71+1dUwAJipEvsC9wIBAg==
    -----END DH PARAMETERS-----

  image:
    repository: nodemailer/haraka-wildduck
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: LoadBalancer
    smtpPort: 25

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  mongo:
    host: mongo
    port: 27017
    authEnabled: false
    username:
    password:

  plugins:
  - spf
  - dkim_verify
  - access
  - rspamd
  - tls
zonemta:
  name: "zonemta"
  replicaCount: 1

  image:
    repository: nodemailer/zonemta-wildduck
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: LoadBalancer
    port: 587
    sslPort: 465

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  mongo:
    host: mongo
    port: 27017
    authEnabled: false
    username:
    password:

rspamd:
  name: "rspamd"
  replicaCount: 1

  image:
    repository: nodemailer/rspamd
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    rspamdPort: 11333
    httpPort: 11334

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

duckyapi:
  name: "duckyapi"
  replicaCount: 1

  image:
    repository: nodemailer/rspamd
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"

  settings:
    serveDuckyPanel: true
    baseUrl: ""
    tokenSecret: ""
    mongoDbUrl: ""
    redisUrl: ""
    wildduckApiUrl: ""
    wildduckApiToken: ""
    mxRecords: '[{"exchange": "mx1.example.com", "priority": 10}, {"exchange": "mx2.example.com", "priority": 20}]' 
    spfCorrectValue: "v=spf1 include:example.com -all"
    spfRegex: "^v=spf.* include:example.com.*(-|~|\\?)all$"
    defaultDKIMSelector: "ducky"
    queueUI: false
    queueUIUser: ""
    queueUIPassword: ""

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext:
    {}
    # fsGroup: 2000

  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    port: 3000

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}
